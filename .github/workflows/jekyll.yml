name: Deploy Jekyll site to Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true
      
      - name: Install Dependencies
        run: |
          bundle config set --local path 'vendor/bundle'
          bundle install
          
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
      
      - name: Create .nojekyll
        run: touch .nojekyll
      
      - name: Build with Jekyll
        run: |
          # Set the correct base URL for GitHub Pages
          echo "baseurl: /portfolio" >> _config.yml
          echo "url: https://alvaropanizo.github.io" >> _config.yml
          
          # Build the site
          JEKYLL_ENV=production bundle exec jekyll build --trace --verbose
          
          # Create .nojekyll in _site
          touch _site/.nojekyll
          
          # Debug output
          echo "Contents of _site/assets:"
          ls -R _site/assets/
        env:
          JEKYLL_ENV: production
      
      - name: Verify built assets
        run: |
          echo "Verifying built assets..."
          
          # Define required files in _site
          required_files=(
            "_site/assets/css/basecamp.css"
            "_site/assets/css/theme.css"
            "_site/assets/js/navigation.js"
            "_site/assets/js/scrolltext.js"
            "_site/assets/images/headshot.png"
          )
          
          # First, show the complete directory structure
          echo -e "\nComplete _site directory structure:"
          tree _site/ || ls -R _site/
          
          # Check each required file
          missing_files=()
          for file in "${required_files[@]}"; do
            if [ -f "$file" ]; then
              echo "✓ Found built file: $file"
              echo "File size: $(ls -lh $file | awk '{print $5}')"
              echo "File content type: $(file -b --mime-type $file)"
            else
              echo "✗ Missing built file: $file"
              missing_files+=("$file")
            fi
          done
          
          # Show source directory structure for comparison
          echo -e "\nSource directory structure:"
          tree assets/ || ls -R assets/
          
          # If any files are missing, show detailed information
          if [ ${#missing_files[@]} -ne 0 ]; then
            echo -e "\nError: Missing required built files:"
            printf '%s\n' "${missing_files[@]}"
            
            echo -e "\nContents of _site/assets (if it exists):"
            ls -la _site/assets/ || echo "_site/assets directory not found"
            
            echo -e "\nContents of source assets:"
            ls -la assets/ || echo "assets directory not found"
            
            exit 1
          fi
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./_site

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 